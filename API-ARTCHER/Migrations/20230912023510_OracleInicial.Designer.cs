// <auto-generated />
using System;
using API_ARTCHER.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace API_ARTCHER.Migrations
{
    [DbContext(typeof(CadastroContext))]
    [Migration("20230912023510_OracleInicial")]
    partial class OracleInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API_ARTCHER.Models.CadParceiro", b =>
                {
                    b.Property<int>("Id_Parc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Parc"));

                    b.Property<int?>("CardapioParceirosId")
                        .IsRequired()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("t_card_parc_id_card");

                    b.Property<int>("Cnpj")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("NVARCHAR2(500)");

                    b.Property<int?>("ProdutoParceiroId")
                        .IsRequired()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("t_card_parc_T_PROD_PARC_id_prd");

                    b.Property<int?>("ProdutoParceiroId_Prd")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Servicos")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("Tipo_Especialidade")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<int>("Valor_Medio")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id_Parc");

                    b.HasIndex("CardapioParceirosId")
                        .IsUnique();

                    b.HasIndex("ProdutoParceiroId")
                        .IsUnique();

                    b.HasIndex("ProdutoParceiroId_Prd")
                        .IsUnique()
                        .HasFilter("\"ProdutoParceiroId_Prd\" IS NOT NULL");

                    b.ToTable("T_Cad_Parc", (string)null);
                });

            modelBuilder.Entity("API_ARTCHER.Models.CadUsuario", b =>
                {
                    b.Property<int>("Id_Usr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Usr"));

                    b.Property<int>("Cpf")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id_Usr");

                    b.ToTable("T_Cad_Usu", (string)null);
                });

            modelBuilder.Entity("API_ARTCHER.Models.CadastroFilial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<string>("Contato")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<string>("NomeDaFilial")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<int>("Numero")
                        .HasMaxLength(30)
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.ToTable("Filiais");
                });

            modelBuilder.Entity("API_ARTCHER.Models.CadastroUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("API_ARTCHER.Models.CardapioParceiros", b =>
                {
                    b.Property<int>("Id_Card")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Card"));

                    b.Property<string>("Cardapio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Descricao_Extra")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<int?>("ProdutoParceiroId")
                        .IsRequired()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("T_PROD_PARC_id_prd");

                    b.Property<int?>("ProdutoParceiroId_Prd")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("Valores")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id_Card");

                    b.HasIndex("ProdutoParceiroId")
                        .IsUnique();

                    b.HasIndex("ProdutoParceiroId_Prd")
                        .IsUnique()
                        .HasFilter("\"ProdutoParceiroId_Prd\" IS NOT NULL");

                    b.ToTable("T_Card_Parc", (string)null);
                });

            modelBuilder.Entity("API_ARTCHER.Models.Endereco", b =>
                {
                    b.Property<int>("Id_End")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_End"));

                    b.Property<int>("Cep")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<int>("LoginId_Log")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("Numero")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("NVARCHAR2(2)");

                    b.Property<int>("UsuarioConvidadoId_ind")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("logradouro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.HasKey("Id_End");

                    b.HasIndex("LoginId_Log");

                    b.HasIndex("UsuarioConvidadoId_ind");

                    b.ToTable("T_End", (string)null);
                });

            modelBuilder.Entity("API_ARTCHER.Models.Login", b =>
                {
                    b.Property<int>("Id_Log")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Log"));

                    b.Property<int?>("CadParceiroID")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("t_cad_parc_id_parc");

                    b.Property<int?>("CadUsuarioId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("t_cad_usu_id_usr");

                    b.Property<int?>("CadUsuarioId_Usr")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR2(40)");

                    b.Property<int?>("EnderecoId")
                        .IsRequired()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("t_end_id_end");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<int?>("RedeSocialId")
                        .IsRequired()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("t_rede_soc_id_feed");

                    b.Property<int?>("RedeSocialId_Feed")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<int>("Telefone")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id_Log");

                    b.HasAlternateKey("EnderecoId");

                    b.HasIndex("CadParceiroID")
                        .IsUnique()
                        .HasFilter("\"t_cad_parc_id_parc\" IS NOT NULL");

                    b.HasIndex("CadUsuarioId")
                        .IsUnique()
                        .HasFilter("\"t_cad_usu_id_usr\" IS NOT NULL");

                    b.HasIndex("CadUsuarioId_Usr")
                        .IsUnique()
                        .HasFilter("\"CadUsuarioId_Usr\" IS NOT NULL");

                    b.HasIndex("RedeSocialId")
                        .IsUnique();

                    b.HasIndex("RedeSocialId_Feed")
                        .IsUnique()
                        .HasFilter("\"RedeSocialId_Feed\" IS NOT NULL");

                    b.ToTable("T_Login", (string)null);
                });

            modelBuilder.Entity("API_ARTCHER.Models.Postagem", b =>
                {
                    b.Property<int>("Id_Pst")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Pst"));

                    b.Property<int>("Avaliacao")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("CadUsuarioId")
                        .IsRequired()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("t_cad_usu_id_usr");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Indicacao")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.HasKey("Id_Pst");

                    b.HasIndex("CadUsuarioId");

                    b.ToTable("T_PST", (string)null);
                });

            modelBuilder.Entity("API_ARTCHER.Models.ProdutoParceiro", b =>
                {
                    b.Property<int>("Id_Prd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Prd"));

                    b.Property<string>("Adicionais")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR2(60)");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Nome_Produto")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)");

                    b.Property<int>("Valor")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id_Prd");

                    b.ToTable("T_Prod_Parc");
                });

            modelBuilder.Entity("API_ARTCHER.Models.RedeSocial", b =>
                {
                    b.Property<int>("Id_Feed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Feed"));

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<int>("Curtida")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Foto_Postagem")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id_Feed");

                    b.ToTable("T_Rede_Soc");
                });

            modelBuilder.Entity("API_ARTCHER.Models.UsuarioConvidado", b =>
                {
                    b.Property<int>("Id_ind")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_ind"));

                    b.Property<int?>("CadUsuarioId")
                        .IsRequired()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("t_cad_usu_id_usr");

                    b.Property<int?>("CadUsuarioId_Usr")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int?>("EnderecoId")
                        .IsRequired()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("t_end_id_end");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR2(80)");

                    b.Property<int>("Qt_Pessoas")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id_ind");

                    b.HasAlternateKey("EnderecoId");

                    b.HasIndex("CadUsuarioId")
                        .IsUnique();

                    b.HasIndex("CadUsuarioId_Usr")
                        .IsUnique()
                        .HasFilter("\"CadUsuarioId_Usr\" IS NOT NULL");

                    b.ToTable("T_USU_CONV", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("\"NormalizedName\" IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("NUMBER(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("NUMBER(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TIMESTAMP(7) WITH TIME ZONE");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("\"NormalizedUserName\" IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("Name")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("Value")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("API_ARTCHER.Models.CadParceiro", b =>
                {
                    b.HasOne("API_ARTCHER.Models.CardapioParceiros", "CardapioParceiros")
                        .WithOne()
                        .HasForeignKey("API_ARTCHER.Models.CadParceiro", "CardapioParceirosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_ARTCHER.Models.ProdutoParceiro", "ProdutoParceiro")
                        .WithOne()
                        .HasForeignKey("API_ARTCHER.Models.CadParceiro", "ProdutoParceiroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_ARTCHER.Models.ProdutoParceiro", null)
                        .WithOne("CadParceiro")
                        .HasForeignKey("API_ARTCHER.Models.CadParceiro", "ProdutoParceiroId_Prd");

                    b.Navigation("CardapioParceiros");

                    b.Navigation("ProdutoParceiro");
                });

            modelBuilder.Entity("API_ARTCHER.Models.CardapioParceiros", b =>
                {
                    b.HasOne("API_ARTCHER.Models.ProdutoParceiro", "ProdutoParceiro")
                        .WithOne()
                        .HasForeignKey("API_ARTCHER.Models.CardapioParceiros", "ProdutoParceiroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_ARTCHER.Models.ProdutoParceiro", null)
                        .WithOne("CardapioParceiros")
                        .HasForeignKey("API_ARTCHER.Models.CardapioParceiros", "ProdutoParceiroId_Prd");

                    b.Navigation("ProdutoParceiro");
                });

            modelBuilder.Entity("API_ARTCHER.Models.Endereco", b =>
                {
                    b.HasOne("API_ARTCHER.Models.Login", "Login")
                        .WithMany()
                        .HasForeignKey("LoginId_Log")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_ARTCHER.Models.UsuarioConvidado", "UsuarioConvidado")
                        .WithMany()
                        .HasForeignKey("UsuarioConvidadoId_ind")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Login");

                    b.Navigation("UsuarioConvidado");
                });

            modelBuilder.Entity("API_ARTCHER.Models.Login", b =>
                {
                    b.HasOne("API_ARTCHER.Models.CadParceiro", null)
                        .WithOne("Login")
                        .HasForeignKey("API_ARTCHER.Models.Login", "CadParceiroID");

                    b.HasOne("API_ARTCHER.Models.CadParceiro", "CadParceiro")
                        .WithOne()
                        .HasForeignKey("API_ARTCHER.Models.Login", "CadUsuarioId");

                    b.HasOne("API_ARTCHER.Models.CadUsuario", "CadUsuario")
                        .WithOne()
                        .HasForeignKey("API_ARTCHER.Models.Login", "CadUsuarioId");

                    b.HasOne("API_ARTCHER.Models.CadUsuario", null)
                        .WithOne("Login")
                        .HasForeignKey("API_ARTCHER.Models.Login", "CadUsuarioId_Usr");

                    b.HasOne("API_ARTCHER.Models.Endereco", "Endereco")
                        .WithOne()
                        .HasForeignKey("API_ARTCHER.Models.Login", "EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_ARTCHER.Models.RedeSocial", "RedeSocial")
                        .WithOne()
                        .HasForeignKey("API_ARTCHER.Models.Login", "RedeSocialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_ARTCHER.Models.RedeSocial", null)
                        .WithOne("Login")
                        .HasForeignKey("API_ARTCHER.Models.Login", "RedeSocialId_Feed");

                    b.Navigation("CadParceiro");

                    b.Navigation("CadUsuario");

                    b.Navigation("Endereco");

                    b.Navigation("RedeSocial");
                });

            modelBuilder.Entity("API_ARTCHER.Models.Postagem", b =>
                {
                    b.HasOne("API_ARTCHER.Models.CadUsuario", "CadUsuario")
                        .WithMany("Postagem")
                        .HasForeignKey("CadUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CadUsuario");
                });

            modelBuilder.Entity("API_ARTCHER.Models.UsuarioConvidado", b =>
                {
                    b.HasOne("API_ARTCHER.Models.CadUsuario", "CadUsuario")
                        .WithOne()
                        .HasForeignKey("API_ARTCHER.Models.UsuarioConvidado", "CadUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_ARTCHER.Models.CadUsuario", null)
                        .WithOne("UsuarioConvidado")
                        .HasForeignKey("API_ARTCHER.Models.UsuarioConvidado", "CadUsuarioId_Usr");

                    b.HasOne("API_ARTCHER.Models.Endereco", "Endereco")
                        .WithOne()
                        .HasForeignKey("API_ARTCHER.Models.UsuarioConvidado", "EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CadUsuario");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("API_ARTCHER.Models.CadParceiro", b =>
                {
                    b.Navigation("Login")
                        .IsRequired();
                });

            modelBuilder.Entity("API_ARTCHER.Models.CadUsuario", b =>
                {
                    b.Navigation("Login")
                        .IsRequired();

                    b.Navigation("Postagem");

                    b.Navigation("UsuarioConvidado")
                        .IsRequired();
                });

            modelBuilder.Entity("API_ARTCHER.Models.ProdutoParceiro", b =>
                {
                    b.Navigation("CadParceiro")
                        .IsRequired();

                    b.Navigation("CardapioParceiros")
                        .IsRequired();
                });

            modelBuilder.Entity("API_ARTCHER.Models.RedeSocial", b =>
                {
                    b.Navigation("Login")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
